plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'com.google.gms.google-services'
}
apply from: '../dependencies.gradle'
android {
    compileSdk 31
    defaultConfig {
        applicationId "xyz.gmfatoom.questik"
        minSdk 26
        targetSdk 31
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner 'xyz.gmfatoom.qvestik.HiltTestRunner'



        vectorDrawables {
            useSupportLibrary true
        }
        javaCompileOptions {
            annotationProcessorOptions {
                arguments += ["room.schemaLocation" : "$projectDir/schemas".toString()]
                arguments += ["dagger.hilt.disableModulesHaveInstallInCheck" : "true"]
            }
        }
    }


    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion versions.composeVersion
    }

    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }

testOptions {
    unitTests {
        includeAndroidResources = true
        returnDefaultValues = true
    }
}
    lint {
        abortOnError false
    }


    tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
    kotlinOptions.freeCompilerArgs += [
            "-Xopt-in=kotlin.time.ExperimentalTime",
            "-Xopt-in=kotlinx.coroutines.ExperimentalCoroutinesApi",
            "-Xopt-in=androidx.compose.animation.ExperimentalAnimationApi",
            "-Xopt-in=androidx.compose.foundation.ExperimentalFoundationApi",
            "-opt-in=kotlin.RequiresOptIn"
    ]
}
}


dependencies {
   // material
    implementation "com.google.android.material:material:$versions.materialVersion"

    // Material 3 bull shit=)
  ///  implementation "androidx.compose.material3:material3:1.0.0-alpha10"

    // compose
    implementation "androidx.compose.ui:ui:$versions.composeVersion"
    implementation "androidx.activity:activity-compose:$versions.activityVersion"
    implementation "androidx.compose.material:material:$versions.composeVersion"
    implementation "androidx.compose.material:material-icons-extended:$versions.composeVersion"
    implementation "androidx.compose.foundation:foundation:$versions.composeVersion"
    implementation "androidx.compose.foundation:foundation-layout:$versions.composeVersion"
    implementation "androidx.compose.animation:animation:$versions.composeVersion"
    implementation "androidx.compose.runtime:runtime:$versions.composeVersion"
    implementation "androidx.compose.runtime:runtime-livedata:$versions.composeVersion"
    implementation "androidx.navigation:navigation-compose:$versions.composeNavVersion"
    implementation "androidx.compose.ui:ui-tooling:$versions.composeVersion"
    implementation "androidx.constraintlayout:constraintlayout-compose:$versions.constraintVersion"
    implementation 'androidx.compose.animation:animation-graphics:1.1.1'
    implementation 'com.google.android.gms:play-services-auth:19.0.0'

    androidTestImplementation "androidx.compose.ui:ui-test-junit4:$versions.composeVersion"

    // compose image loading
    implementation "com.github.skydoves:landscapist-coil:$versions.landscapistVersion"

    // compose insets
    implementation "com.google.accompanist:accompanist-insets:$versions.accompanistVersion"
    implementation "com.google.accompanist:accompanist-pager:$versions.accompanistVersion"
    implementation "com.google.accompanist:accompanist-pager-indicators:$versions.accompanistVersion"


    // compose compatibles
    implementation "com.github.skydoves:orchestra-balloon:$versions.orchestraVersion"

    // architecture components
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$versions.lifecycleVersion"
    implementation "androidx.room:room-ktx:$versions.roomVersion"
    kapt "androidx.room:room-compiler:$versions.roomVersion"
    testImplementation "androidx.arch.core:core-testing:$versions.archCompomentVersion"


    //Firebase
    implementation 'com.google.firebase:firebase-auth:21.0.5'
    implementation 'com.google.firebase:firebase-database:20.0.5'
    implementation 'com.google.firebase:firebase-storage:20.0.1'
    implementation 'com.firebaseui:firebase-ui-database:8.0.0'
    implementation 'com.firebaseui:firebase-ui-storage:8.0.0'
    implementation platform('com.google.firebase:firebase-bom:29.0.0')
    implementation 'com.google.firebase:firebase-database-ktx'
    implementation 'com.google.firebase:firebase-auth-ktx:21.0.5'



    // startup
    implementation "androidx.startup:startup-runtime:$versions.startupVersion"

    // hilt
    implementation "com.google.dagger:hilt-android:$versions.hiltVersion"
    implementation "androidx.hilt:hilt-navigation-compose:$versions.hiltComposeNavigation"
    kapt "com.google.dagger:hilt-compiler:$versions.hiltVersion"
    androidTestImplementation "com.google.dagger:hilt-android-testing:$versions.hiltVersion"
    kaptAndroidTest "com.google.dagger:hilt-compiler:$versions.hiltVersion"

    // network
    implementation "com.github.skydoves:sandwich:$versions.sandwichVersion"
    implementation "com.squareup.okhttp3:logging-interceptor:$versions.okhttpVersion"
    implementation "com.squareup.retrofit2:converter-gson:$versions.retrofitVersion"
    testImplementation "com.squareup.okhttp3:mockwebserver:$versions.okhttpVersion"

    // coroutines
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:$versions.coroutinesVersion"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:$versions.coroutinesVersion"
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-core:$versions.coroutinesVersion")
    implementation("org.jetbrains.kotlinx:kotlinx-coroutines-play-services:$versions.coroutinesVersion")


    // whatIf
    implementation "com.github.skydoves:whatif:$versions.whatIfVersion"

    // logging
    implementation "com.jakewharton.timber:timber:$versions.timberVersion"

    // unit test
    testImplementation "junit:junit:$versions.junitVersion"
    testImplementation "androidx.test:core:$versions.androidxTest"
    androidTestImplementation "androidx.arch.core:core-testing:2.1.0"
    testImplementation "com.nhaarman.mockitokotlin2:mockito-kotlin:$versions.mockitoKotlinVersion"
    testImplementation "org.mockito:mockito-inline:$versions.mockitoInlineVersion"
    testImplementation "app.cash.turbine:turbine:$versions.turbineVersion"
    testImplementation "org.robolectric:robolectric:$versions.robolectricVersion"
    androidTestImplementation "com.google.truth:truth:$versions.truthVersion"
    androidTestImplementation "androidx.test.ext:junit:$versions.androidxTestJunit"
    androidTestImplementation "com.android.support.test:runner:$versions.androidTestRunner"


    //Db debug HELP
   // implementation   'com.eygraber:android-debug-db-base:2.0.4'

    implementation "com.github.amitshekhariitbhu:Android-Debug-Database:1.0.6"

}